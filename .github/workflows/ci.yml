name: CI

on:
  push:
    branches:
      - '*'
  pull_request:
    branches:
      - '*'

jobs:
  build:
    if: "!contains(github.event.head_commit.message, 'skip ci')"

    runs-on: ubuntu-latest

    name: Testing

    steps:
      - uses: actions/checkout@v3

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.1
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite
          coverage: pcov

      - uses: actions/setup-node@v3.2.0
        name: Setup Node.js v16.x
        with:
          node-version: 16.x

      - uses: actions/cache@v3.0.2
        name: Cache Composer dependencies
        with:
          path: ~/.composer/cache/files
          key: composer-${{ hashFiles('composer.json') }}

      - uses: actions/cache@v3.0.2
        name: Cache NPM dependencies
        with:
          path: ~/.composer/cache/files
          key: npm-${{ hashFiles('package.json') }}

      - name: Copy environment variables
        run: |
          cp .env.example .env

      - name: Install dependencies
        run: |
          composer install --no-interaction --no-progress --prefer-dist --optimize-autoloader
          npm ci

      - name: Build assets
        run: |
          npm run prod

      - name: Create SQLite database file
        run: |
          touch database/database.sqlite

      - name: Generate the keys
        run: |
          php artisan key:generate

      - name: Link storage
        run: |
          php artisan storage:link

      - name: Start the webserver
        run: |
          php artisan serve &

      - name: Run tests
        run: |
          vendor/bin/phpunit --coverage-text --coverage-clover=coverage.xml

      - uses: codecov/codecov-action@v3.0.0
        with:
          fail_ci_if_error: false
          token: ${{ secrets.CODECOV_TOKEN }}
